<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\PickUpWaring.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\PickUpWaring.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Jun 13 15:46:41 2018
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Init_BR262 &rArr; Set_Mixing_Ratio &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[27]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1b]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ACMP01_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[1f]">ACMP23_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[21]">ADC_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[1b]">Default_Handler</a> from startup_nuc029xan.o(.text) referenced 9 times from startup_nuc029xan.o(RESET)
 <LI><a href="#[d]">EINT0_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[e]">EINT1_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[f]">GPIOP0P1_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[10]">GPIOP2P3P4_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[1c]">I2C0_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[11]">PWMA_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[12]">PWMB_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[20]">PWRWU_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[22]">RTC_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[25]">Reset_Handler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[19]">SPI0_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from systick.o(i.SysTick_Handler) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_nuc029xan.o(i.SystemInit) referenced from startup_nuc029xan.o(.text)
 <LI><a href="#[13]">TMR0_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[14]">TMR1_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[15]">TMR2_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[16]">TMR3_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[17]">UART0_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from 485_driver.o(i.UART1_IRQHandler) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[c]">WDT_IRQHandler</a> from startup_nuc029xan.o(.text) referenced from startup_nuc029xan.o(RESET)
 <LI><a href="#[26]">__main</a> from __main.o(!!!main) referenced from startup_nuc029xan.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[76]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[78]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[79]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[80]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[81]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[82]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[83]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[84]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[85]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[86]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[87]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[88]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[89]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[34]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[8f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[90]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[91]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[92]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[29]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[93]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[94]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[30]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Init_BR262 &rArr; Set_Mixing_Ratio &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[95]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[33]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[96]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[35]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[25]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ACMP23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIOP0P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIOP2P3P4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PWMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_nuc029xan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[32]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9d]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[9e]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[9f]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>ADC_Clock_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, adc_driver.o(i.ADC_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_Clock_Init &rArr; CLK_SetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3d]"></a>ADC_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, adc_driver.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_Init &rArr; ADC_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>ADC_Open</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, adc.o(i.ADC_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[3f]"></a>Buzzer_Gpio_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, buzzer.o(i.Buzzer_Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Buzzer_Gpio_Init &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Clock_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Init
</UL>

<P><STRONG><a name="[41]"></a>CLK_EnablePLL</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, clk.o(i.CLK_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CLK_EnablePLL &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[4b]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_Clock_Init
</UL>

<P><STRONG><a name="[47]"></a>CLK_SetCoreClock</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, clk.o(i.CLK_SetCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_Clock_Init
</UL>

<P><STRONG><a name="[48]"></a>CLK_SetHCLK</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[3c]"></a>CLK_SetModuleClock</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Clock_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Init
</UL>

<P><STRONG><a name="[42]"></a>CLK_WaitClockReady</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_Clock_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[4c]"></a>Change_BR262_DeviceMode</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, br262_driver.o(i.Change_BR262_DeviceMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Change_BR262_DeviceMode &rArr; I2C0SlaveRegWrite &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[40]"></a>GPIO_SetMode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485EN_Gpio_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Gpio_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUTPUT
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_INPUT
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_IOinit
</UL>

<P><STRONG><a name="[4d]"></a>I2C0SlaveRegWrite</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, i2c.o(i.I2C0SlaveRegWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C0SlaveRegWrite &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_BR262_DeviceMode
</UL>

<P><STRONG><a name="[53]"></a>I2C0SlaveRegWrite_2Byte</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, i2c.o(i.I2C0SlaveRegWrite_2Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C0SlaveRegWrite_2Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Preamp_Gain
</UL>

<P><STRONG><a name="[54]"></a>I2C0SlaveRegWrite_4Byte</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, i2c.o(i.I2C0SlaveRegWrite_4Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Mixing_Ratio
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Mixing_Destination
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel1_TalkMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel1_EQ_Gain_Exponent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel0_TalkMode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel0_EQ_Gain_Exponent
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[55]"></a>IIC_IOinit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, i2c.o(i.IIC_IOinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC_IOinit &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_HIGH
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>IIC_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Start &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUTPUT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_LOW
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_HIGH
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>

<P><STRONG><a name="[51]"></a>IIC_Stop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, i2c.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Stop &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUTPUT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_LOW
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_HIGH
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>

<P><STRONG><a name="[50]"></a>IIC_Wait_Ack</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, i2c.o(i.IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_INPUT
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_SDA
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>

<P><STRONG><a name="[4f]"></a>IIC_Write_Byte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, i2c.o(i.IIC_Write_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUTPUT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_LOW
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_HIGH
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>

<P><STRONG><a name="[5b]"></a>Init_BR262</STRONG> (Thumb, 722 bytes, Stack size 16 bytes, br262_driver.o(i.Init_BR262))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Init_BR262 &rArr; Set_Mixing_Ratio &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Preamp_Gain
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Mixing_Ratio
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Mixing_Destination
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel1_TalkMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel1_EQ_Gain_Exponent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel0_TalkMode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel0_EQ_Gain_Exponent
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_BR262_DeviceMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>READ_SDA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.READ_SDA))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[56]"></a>SDA_HIGH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.SDA_HIGH))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_IOinit
</UL>

<P><STRONG><a name="[59]"></a>SDA_INPUT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c.o(i.SDA_INPUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SDA_INPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[58]"></a>SDA_LOW</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.SDA_LOW))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[57]"></a>SDA_OUTPUT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c.o(i.SDA_OUTPUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[6f]"></a>SYS_ResetModule</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetModule))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Init
</UL>

<P><STRONG><a name="[60]"></a>Set_Channel0_EQ_Gain_Exponent</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Channel0_EQ_Gain_Exponent))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Channel0_EQ_Gain_Exponent &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[5c]"></a>Set_Channel0_TalkMode</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Channel0_TalkMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Channel0_TalkMode &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[61]"></a>Set_Channel1_EQ_Gain_Exponent</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Channel1_EQ_Gain_Exponent))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Channel1_EQ_Gain_Exponent &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[5d]"></a>Set_Channel1_TalkMode</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Channel1_TalkMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Channel1_TalkMode &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[5e]"></a>Set_Mixing_Destination</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Mixing_Destination))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Mixing_Destination &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[5f]"></a>Set_Mixing_Ratio</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, br262_driver.o(i.Set_Mixing_Ratio))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Mixing_Ratio &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[62]"></a>Set_Preamp_Gain</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, br262_driver.o(i.Set_Preamp_Gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Set_Preamp_Gain &rArr; I2C0SlaveRegWrite_2Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>

<P><STRONG><a name="[66]"></a>SysTickInterrupt_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickInterrupt_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, systick.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInterrupt_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SysTick_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInterrupt_Disable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, system_nuc029xan.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>

<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc029xan.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>U485EN_Gpio_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 485_driver.o(i.U485EN_Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = U485EN_Gpio_Init &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>U485RecData</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, 485_driver.o(i.U485RecData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = U485RecData &rArr; UART_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>U485SendData</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, 485_driver.o(i.U485SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = U485SendData &rArr; UART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>U485_Clock_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 485_driver.o(i.U485_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = U485_Clock_Init &rArr; CLK_SetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[6e]"></a>U485_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, 485_driver.o(i.U485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = U485_Init &rArr; UART_Open &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>U485rec_Interrupt_Enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 485_driver.o(i.U485rec_Interrupt_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, 485_driver.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART1_IRQHandler &rArr; U485RecData &rArr; UART_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485RecData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>UART_Open</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, uart.o(i.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_Open &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Init
</UL>

<P><STRONG><a name="[6b]"></a>UART_Read</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, uart.o(i.UART_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485RecData
</UL>

<P><STRONG><a name="[6d]"></a>UART_Write</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, uart.o(i.UART_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485SendData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>WDT_Clock_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdt_driver.o(i.WDT_Clock_Init))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[71]"></a>WDT_Reset_Count</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wdt_driver.o(i.WDT_Reset_Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDT_Reset_Count
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, i2c.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_Byte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_4Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite_2Byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SlaveRegWrite
</UL>

<P><STRONG><a name="[74]"></a>delayms</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, delay.o(i.delayms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delayms
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>main</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; Init_BR262 &rArr; Set_Mixing_Ratio &rArr; I2C0SlaveRegWrite_4Byte &rArr; IIC_Write_Byte &rArr; SDA_OUTPUT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Reset_Count
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485rec_Interrupt_Enable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485SendData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485EN_Gpio_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Gpio_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_IOinit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BR262
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[45]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, system_nuc029xan.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[1b]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc029xan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc029xan.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CORE_Clock_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.CORE_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CORE_Clock_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[63]"></a>SYS_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SYS_Init &rArr; CORE_Clock_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Clock_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U485_Clock_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORE_Clock_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[72]"></a>SYS_UnlockReg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wdt_driver.o(i.SYS_UnlockReg))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Reset_Count
</UL>

<P><STRONG><a name="[43]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, clk.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[46]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, uart.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[38]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
